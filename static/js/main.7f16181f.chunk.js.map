{"version":3,"sources":["components/Navigation/Navigation.js","components/Board/Board.js","components/Task/Task.js","components/Card/Card.js","App.js","index.js"],"names":["Navigation","props","className","id","style","paddingRight","fontWeight","color","onClick","generateLastMonthBoard","marginRight","generateNextMonthBoard","today","month","year","getCurrentDate","Board","height","generateBoard","Task","displayTask","task","Card","tasks","length","i","map","key","card","day","this","isToday","getMonthName","isFrontDays","isRearDays","generateTaskCards","displayModal","Component","App","state","modal","taskModal","date","location","description","bind","assignTaskToCard","onSetTask","onSetLocation","onSetDescription","currentDate","Date","setState","getFullYear","getMonth","getDate","console","log","myStrong","strong","getTime","toString","Math","floor","random","e","preventDefault","tasksArray","push","getUniqueStr","target","value","thisMonthDays","lastMonthDays","board","firstDayOfMonth","getDay","gapCounter","dayCounter","displayBoard","String","substring","forEach","thisCardKey","thisday","filteredTasks","filter","str","split","deleteTask","float","fontSize","cursor","onSubmit","onChange","type","placeholder","readOnly","letterSpacing","border","formatDate","paddingBottom","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f16181f.chunk.js","sourcesContent":["import React from 'react';\nimport './Navigation.css'\n\nfunction getMonthName(month) {\n        const months = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ];\n        return months[month - 1] + ' ';\n}\n\n\nconst Navigation = (props) => {\n    return (\n        <header>\n            <div>\n                <i className=\"fas fa-bars\" id='bar-icon'></i>\n            </div>\n            <div>\n                <h1><i className=\"fas fa-calendar-alt\" style={{ paddingRight: '.5em', fontWeight: '100', color: 'rgb(26, 115, 232)' }}></i><span style={{ color: 'rgb(26, 115, 232)', fontWeight: '700' }}>React</span> Calendar</h1>\n            </div>\n            <div>\n                <i onClick={props.generateLastMonthBoard} className=\"fas fa-angle-left angle\" style={{ marginRight: '.5em' }}></i>\n                <i onClick={props.generateNextMonthBoard} className=\"fas fa-angle-right angle\"></i>\n            </div>\n            <h2><span>{getMonthName(props.today.month)}</span>{props.today.year}</h2>\n            <button onClick={props.getCurrentDate}>Today</button>\n        </header>\n    );\n}\n\nexport default Navigation;","import React from 'react';\nimport './Board.css';\n\n\nconst Board = (props) => {\n    return (\n        <div>\n            <main className='board-container' style={{height: '90vh'}}>\n                <div className='dayNames'>\n                    <ul>\n                        <li>SUN</li>\n                        <li>MON</li>\n                        <li>TUE</li>\n                        <li>WED</li>\n                        <li>THU</li>\n                        <li>FRI</li>\n                        <li>SAT</li>\n                    </ul>\n                </div>\n                <div className='grid-board'>\n                    {props.generateBoard(props.today)}\n                </div>\n            </main>\n        </div>\n    );\n}\n\nexport default Board;","import React from 'react';\nimport './Task.css'\n\n\nconst Task = (props) => {\n    return (\n        <div className='task-container' onClick={()=>{props.displayTask(props.task)}}>\n            <p>{props.task.task}</p>\n        </div>\n    );\n}\n\nexport default Task;","import React, { Component } from 'react';\nimport './Card.css';\nimport Task from '../Task/Task';\n\n\n\nclass Card extends Component {\n\n    generateTaskCards(tasks) {\n        if (tasks.length > 0) {\n            let i = 1;\n            return tasks.map(task => {\n                return (\n                    <Task\n                        displayTask={this.props.displayTask}\n                        task={task}\n                        key={i++ + ':' + task.key}\n                    />\n                );\n            })\n        }\n    }\n\n    getMonthName(card) {\n        if (card.day === 1) {\n            const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n                \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n            return months[card.month - 1] + ' ';\n        }\n    }\n\n    render() {\n        return (\n            <div style={{ height: '100%' }}>\n                <div className='date-card' >\n                    {\n                        this.props.isToday ?\n                            <div style={{ height: '10%' }}>\n                                <p className='day-container'>\n                                    <span>{this.getMonthName(this.props.card)}</span>\n                                    <span className='today'>{this.props.card.day}</span>\n                                </p>\n                            </div>\n                            :\n                            <div style={{ height: '10%' }}>\n                                {\n                                    this.props.card.isFrontDays || this.props.card.isRearDays ?\n                                        <p className='day-container'>\n                                            <span style={{ color: 'rgba(0, 0, 0, 0.54)' }}>{this.getMonthName(this.props.card)}</span>\n                                            <span style={{ color: 'rgba(0, 0, 0, 0.54)' }}>{this.props.card.day}</span>\n                                        </p>\n                                        :\n                                        <p className='day-container'>\n                                            <span>{this.getMonthName(this.props.card)}</span>\n                                            <span>{this.props.card.day}</span>\n                                        </p>\n                                }\n                            </div>\n                    }\n                    {this.generateTaskCards(this.props.tasks)}\n                    <div onClick={this.props.displayModal} style={{ height: '90%' }}></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Card;","import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Board from './components/Board/Board';\nimport Card from './components/Card/Card';\n\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      today: {},\n      tasks: [],\n      modal: false,\n      taskModal: false,\n      date: '',\n      task: '',\n      location: '',\n      description: '',\n      id: ''\n    }\n    this.getCurrentDate = this.getCurrentDate.bind(this);\n    this.generateBoard = this.generateBoard.bind(this);\n    this.generateLastMonthBoard = this.generateLastMonthBoard.bind(this);\n    this.generateNextMonthBoard = this.generateNextMonthBoard.bind(this);\n    this.assignTaskToCard = this.assignTaskToCard.bind(this);\n    this.onSetTask = this.onSetTask.bind(this);\n    this.onSetLocation = this.onSetLocation.bind(this);\n    this.onSetDescription = this.onSetDescription.bind(this);\n    this.displayTask = this.displayTask.bind(this);\n  }\n\n  componentDidMount() {\n    this.getCurrentDate()\n  }\n\n  getCurrentDate() {\n    const currentDate = new Date();\n    this.setState({\n      today: {\n        year: currentDate.getFullYear(),\n        month: currentDate.getMonth() + 1,\n        date: currentDate.getDate(),\n      }\n    })\n  }\n\n  generateLastMonthBoard() {\n    if (this.state.today.month === 1) {\n      this.setState({\n        today: {\n          year: this.state.today.year - 1,\n          month: 12,\n        }\n      })\n      return\n    }\n    this.setState({\n      today: {\n        year: this.state.today.year,\n        month: this.state.today.month - 1,\n      }\n    })\n  }\n\n  generateNextMonthBoard() {\n    if (this.state.today.month === 12) {\n      this.setState({\n        today: {\n          year: this.state.today.year + 1,\n          month: 1,\n        }\n      })\n      return\n    }\n    this.setState({\n      today: {\n        year: this.state.today.year,\n        month: this.state.today.month + 1,\n      }\n    })\n  }\n\n  displayModal(date) {\n    this.setState({\n      modal: true,\n      date: date,\n      task: '', //reset state not to duplicate the same values\n      location: '',\n      description: '',\n      id: ''\n    })\n  }\n\n  displayTask(task) {\n    console.log(task)\n    this.setState({\n      taskModal: true,\n      date: task.key,\n      task: task.task,\n      location: task.location,\n      description: task.description,\n      id: task.id\n    })\n  }\n\n  getUniqueStr(myStrong) {\n    let strong = 1000;\n    if (myStrong) strong = myStrong;\n    return new Date().getTime().toString(16) + Math.floor(strong * Math.random()).toString(16)\n  }\n\n  assignTaskToCard(e) {\n    e.preventDefault();\n\n    const tasksArray = this.state.tasks;\n    if (this.state.task === '') {\n      console.log('empty')\n      return\n    }\n    tasksArray.push({\n      key: this.state.date,\n      id: this.getUniqueStr(),\n      task: this.state.task,\n      location: this.state.location,\n      description: this.state.description,\n    })\n\n    this.setState({\n      tasks: tasksArray,\n      modal: false\n    })\n  }\n\n  onSetTask(e) {\n    this.setState({\n      task: e.target.value\n    })\n  }\n  onSetLocation(e) {\n    this.setState({\n      location: e.target.value\n    })\n  }\n  onSetDescription(e) {\n    this.setState({\n      description: e.target.value\n    })\n  }\n\n\n  generateBoard(today) {\n    const thisMonthDays = new Date(today.year, today.month, 0).getDate(); // get number of days of the month\n    const lastMonthDays = new Date(today.year, today.month - 1, 0).getDate();\n    const board = [];\n    const firstDayOfMonth = new Date(today.year, today.month - 1, 1).getDay();       // Sunday - Saturday : 0 - 6\n\n    let isFrontDays = false;\n    let isRearDays = false;\n    let gapCounter = lastMonthDays - firstDayOfMonth + 1;\n    let dayCounter = 1;\n    let month = today.month;\n\n    for (let i = 1; i <= 35; i++) {\n      if (i <= firstDayOfMonth) {\n        isFrontDays = true;\n        month = today.month - 1;\n        board.push({\n          day: gapCounter,\n          month: month,\n          year: today.year,\n          isFrontDays: isFrontDays,\n          isRearDays: isRearDays,\n        })\n        gapCounter++\n        isFrontDays = false;\n        month = today.month\n        continue\n      }\n\n      if (dayCounter >= thisMonthDays + 1) {\n        dayCounter = 1;\n        isRearDays = true;\n        month = today.month + 1;\n      }\n\n      board.push({\n        day: dayCounter,\n        month: month,\n        year: today.year,\n        isFrontDays: isFrontDays,\n        isRearDays: isRearDays,\n      })\n      dayCounter++;\n    }\n\n    return this.displayBoard(board)\n  }\n\n\n\n  displayBoard(board) {\n    const today = String(new Date()).substring(0, 10);\n\n    return board.map(card => {\n      const tasks = [];\n      let isToday = false;\n\n      if (card.month === 0) {\n        card.month = 12;\n        card.year = card.year - 1\n        console.log(card)\n      } else if (card.month === 13) {\n        card.month = 1;\n        card.year = card.year + 1\n      }\n\n      this.state.tasks.forEach(task => {\n        const thisCardKey = card.day + '/' + card.month + '/' + card.year;\n        if (task.key === thisCardKey) {\n          tasks.push(task)\n        }\n      })\n\n      const thisday = String(new Date(card.year, card.month - 1, card.day)).substring(0, 10);\n\n      if (today === thisday) {\n        isToday = !isToday;\n      }\n\n\n      return (\n        <Card\n          card={card}\n          isToday={isToday}\n          tasks={tasks}\n          key={card.day + '/' + card.month + '/' + card.year}\n          displayModal={() => { this.displayModal(card.day + '/' + card.month + '/' + card.year) }}\n          displayTask={this.displayTask}\n        />\n      )\n    })\n  }\n\n  deleteTask(id) {\n    const tasks = this.state.tasks;\n    const filteredTasks = tasks.filter(task => task.id !== id)\n\n    this.setState({\n      tasks: filteredTasks,\n      taskModal: false\n    })\n  }\n\n  formatDate(date) {\n    let str = date.split('/')\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n      \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    const month = months[str[1] - 1];\n    str = month + ' ' + str[0] + ', ' + str[2];\n\n    return str\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\" >\n        {\n          this.state.modal || this.state.taskModal ?\n            <div className='modal-window'>\n              <div className='modal-content'>\n                {this.state.modal ?\n                  <i onClick={() => this.setState({ modal: false, taskModal: false })} className=\"fas fa-times close-btn\"></i>\n                  :\n                  <div>\n                    <i onClick={() => this.setState({ modal: false, taskModal: false })} className=\"fas fa-times close-btn\"></i>\n                    <i onClick={() => this.deleteTask(this.state.id)} className=\"fas fa-trash\" style={{ float: 'right', fontSize: '1.8rem', marginRight: '1.5rem', cursor: 'pointer' }}></i>\n                  </div>\n                }\n                {this.state.modal ?\n                  <form onSubmit={this.assignTaskToCard}>\n                    <input onChange={this.onSetTask} className='task-field' type=\"text\" placeholder='Add title and date' />\n                    <div className='inner-fields'>\n                      <div className='icon-field'>\n                        <i className=\"far fa-clock\"></i>\n                        <i className=\"fas fa-map-marker-alt\"></i>\n                        <i className=\"far fa-sticky-note\"></i>\n                      </div>\n                      <div className='inputs-field'>\n                        <input readOnly type=\"text\" style={{ letterSpacing: '.1rem', border:'none' }} value={this.formatDate(this.state.date)} />\n                        <input onChange={this.onSetLocation} type=\"text\" placeholder='Add location' />\n                        <input onChange={this.onSetDescription} type=\"text\" placeholder='Add description' />\n                      </div>\n                    </div>\n                    <button>Save</button>\n                  </form>\n                  :\n                  <div className='task-modal'>\n                    <div className='task-modal-left'>\n                      <i className=\"fas fa-square\" style={{ color: '#039BE5', paddingBottom: '2.7em' }}></i>\n                      <i className=\"fas fa-map-marker-alt\"></i>\n                      <i className=\"far fa-sticky-note\"></i>\n                    </div>\n                    <div className='task-modal-right'>\n                      <h1>{this.state.task}</h1>\n                      <h2>{this.formatDate(this.state.date)}</h2>\n                      <p>{this.state.location}</p>\n                      <p>{this.state.description}</p>\n                    </div>\n                  </div>\n                }\n              </div>\n            </div>\n            :\n            <div></div>\n        }\n        <Navigation\n          today={this.state.today}\n          generateLastMonthBoard={this.generateLastMonthBoard}\n          generateNextMonthBoard={this.generateNextMonthBoard}\n          getCurrentDate={this.getCurrentDate}\n        />\n        <Board\n          today={this.state.today}\n          generateBoard={this.generateBoard}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}